<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
    <meta http-equiv="Content-type">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="/node_modules/line-chart/dist/css/line-chart.css">
    <link rel="stylesheet" type="text/css" href="/css/app.css">
    <script src="https://code.jquery.com/jquery-2.2.0.min.js"></script>
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script type="text/javascript" src="/node_modules/socket.io-client/socket.io.js"></script>
    <script type="text/javascript" src="/node_modules/line-chart/dist/line-chart.js"></script>
    <script type="text/javascript" src="/node_modules/datetime-picker/dist/datetime-picker.js"></script>
	<title>Live</title>
	<script type="text/javascript">

		$(document).ready(function () {
			'use strict'
			var socket = io();
			socket.on('connect', function () {
				console.log('connected to server websocket')
			})
			socket.on('temp', function (realtime_data) {
				console.log(realtime_data)

				// Check to see if data is correct
				if (typeof realtime_data.temperature === 'string' && typeof realtime_data.date === 'string') {

					if (fixed) {
						data.shift();
					} 

					data.push({
						x: new Date(realtime_data.date),
						y: parseInt(realtime_data.temperature)
					});
					console.log(data)

					if(default_chart_loaded) {
						linechart.data([data])
						.update()
					}
				}
			})

			/*----------------------------------------------------------------------------------
			* Chart making functions
			**---------------------------------------------------------------------------------*/

			// Draw a chart
			function makeChart(selection, data) {
				linechart = lineChart.chart(selection, 'temp-chart')
					.ratio(4,2)
					.data([data])
					.scaleX('time')
					.xLabel('Time')
					.axisPadding({y:1})
					.yLabel('Temperature (Â°C)')
					.title('Temperature vs Time')
					.grid(true)
					.render()
			}

			function newChart(url) {
				// Get data with Ajax call
				$.getJSON(url, function (new_data) {

					// Convert date values in date objects
					// Map value to x and y
					data = new_data.rows.map(function (value) {
						return {
							x: new Date(value.date),
							y: value.temperature
						}
					})

					// Remove old chart
					selection.selectAll('*').remove()
					// Add chart with new data
					makeChart(selection, data)

					default_chart_loaded = true;

				});
			}

			/*----------------------------------------------------------------------------------
			* Toggle fixed data size checkbox
			**---------------------------------------------------------------------------------*/

			var fixedCheckbox = document.getElementById('fixedCheckbox');
			var fixedTick = document.getElementById('fixedTick');
			fixedCheckbox.addEventListener('click', function () {
				if(fixed) {
					fixed = false;
					fixedTick.style.display = "none";
				} else {
					fixed = true;
					fixedTick.style.display = "block";
				}
			});

			/*----------------------------------------------------------------------------------
			* Load default chart
			**---------------------------------------------------------------------------------*/
			
			// Live load settings
			var fixed = true;
			var default_chart_loaded = false;

			// Select chart host element
			var selection = d3.select("div.chart")
			var linechart;
			var data;

			// Data is stored at GMT on server
			// When conerted back to Date object using new Date() in browser it will be correct.
			// Always Send ISO8601 to server!

			// Default to get data from an hour ago till now
			var start_date = new Date();
			var end_date = new Date()
			start_date.setHours(end_date.getHours()-10);

			// Set data URL
			var url = '/temp/datetime?start=' + start_date.toISOString() + '&end=' + end_date.toISOString();
			newChart(url);
			
			/*----------------------------------------------------------------------------------
			* Update chart using datetime picker (only for start)
			**---------------------------------------------------------------------------------*/
			
			var start_selection = d3.select("#startDate");

		 	var print_events = document.getElementById('events')

		 	// Create a datetime-picker in start_selection div
		 	// Updates will fire 'start_date' event
		 	dateTimePicker.pick(start_selection, start_date, 'start_date');

		 	// Listen for datetime updates
		 	document.addEventListener('start_date', function(e) {
		 	  default_chart_loaded = false;
			  console.log('start date: ' + e.detail);

			  // Update chart with new start date
			  start_date = new Date(e.detail);
			  end_date = new Date();
			  url = '/temp/datetime?start=' + start_date.toISOString() + '&end=' + end_date.toISOString();
			  newChart(url);
			});



		});

	</script>
</head>
<body>
	<div class="overflow-wrapper">
		{{> nav}}
		<div class="chart" id="staticChart">
		</div>

		<div id="dates">
			
			<div id="startDateContainer">
				<div class="title">Start</div>
				<div id="startDate"></div>
			</div>
			<div id="fixedCheckboxContainer">
				<div class="title">Fixed Data Size</div>
				<div id="fixedCheckbox">
					<img id="fixedTick" src="/images/tick.svg">
				</div>
			</div>
		</div>
	</div>
</body>
</html>